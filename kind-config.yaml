kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
  - role: control-plane
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
    extraPortMappings:
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      - containerPort: 443
        hostPort: 443
        protocol: TCP
      - containerPort: 27017
        hostPort: 27017
        protocol: TCP

### CREATE KIND

# kind create cluster --config=kind-config.yaml


### CREATE INGRESS

# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

# OR

# kubectl apply -f ./deploy/ingress_deploy.yaml

# kubectl wait --namespace ingress-nginx \
#  --for=condition=ready pod \
#  --selector=app.kubernetes.io/component=controller \
#  --timeout=90s


### CREATE MONGO DB

# docker network create mongo
# docker run -d
#  --network mongo
#  -h mongo
#  --name mongo
#  -e MONGO_INITDB_ROOT_USERNAME=mongouser
#  -e MONGO_INITDB_ROOT_PASSWORD=mongopassword
#  -p 27017:27017
#  -v mongo:/data/db mongo

# OR

# kubectl apply -f ./deploy/mongo_db_deploy.yaml



### LINK NETWORK

#  docker network connect kind mongo